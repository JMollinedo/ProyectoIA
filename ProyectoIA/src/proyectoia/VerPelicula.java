/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoia;

import java.util.Optional;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jmoll
 */
public class VerPelicula extends javax.swing.JFrame {

    /**
     * Creates new form VerPelicula
     */
    public VerPelicula() {
        initComponents();
    }
    public VerPelicula(Pelicula p){
        this();
        DefaultTableModel model = (DefaultTableModel) jTtabla.getModel();
        model.addRow(new Object[]{"Pelicula", p.getMovie_title()});
        model.addRow(new Object[]{"Año", p.getTitle_year()});
        model.addRow(new Object[]{"IMDB Score", p.getImdb_score()});
        model.addRow(new Object[]{"Clasificación", p.getContent_rating()});
        
        model.addRow(new Object[]{"Idioma", p.getLanguage()});
        model.addRow(new Object[]{"País", p.getCountry()});
        
        model.addRow(new Object[]{"Presupuesto", p.getBudget()});
        model.addRow(new Object[]{"Ganancias", p.getGross()});
        
        if(Optional.ofNullable(p.getDirector()).isPresent()){
            String s = p.getDirector() + "(" + p.getDirector_likes() + ") ";
            model.addRow(new Object[]{"Director (likes)", s});
        }
        if(!p.getActors().isEmpty()){
            StringBuilder sb = new StringBuilder();
            if(Optional.ofNullable(p.getActor1()).isPresent()){
                sb = sb.append(p.getActor1() + " (" + p.getActor1_likes()+ ")" );
            }
            if(Optional.ofNullable(p.getActor2()).isPresent()){
                sb = sb.append(" / " + p.getActor2() + " (" + p.getActor2_likes()+ ")");
            }
            if(Optional.ofNullable(p.getActor3()).isPresent()){
                sb = sb.append(" / " + p.getActor3() + " (" + p.getActor3_likes()+ ")");
            }
            model.addRow(new Object[]{"Actores (likes)", sb.toString()});
        }
        model.addRow(new Object[]{"Color", p.getColor()});
        model.addRow(new Object[]{"Duración", p.getDuration()});
        
        if(!p.getGenres().isEmpty()) 
            model.addRow(
                    new Object[]{
                        "Generos",
                        Pelicula.listToString(p.getGenres(), " / ")
                    });
        if(!p.getPlot_keywords().isEmpty()) 
            model.addRow(
                    new Object[]{
                        "Plot", 
                        Pelicula.listToString(p.getPlot_keywords(), " / ")
                    });
        
        model.addRow(new Object[]{"Link", p.getMovie_imdb_link()});
        
        model.addRow(new Object[]{"Aspecto", p.getAspect_ratio()});
        model.addRow(new Object[]{"Numero de Criticas", p.getNum_critic_for_reviews()});
        model.addRow(new Object[]{"Votos", p.getNum_voted_users()});
        model.addRow(new Object[]{"Cast Likes", p.getCast_total_facebook_likes()});
        model.addRow(new Object[]{"Facenumber", p.getFacenumber_in_poster()});
        model.addRow(new Object[]{"Reseñas", p.getNum_user_for_reviews()});
        model.addRow(new Object[]{"Movie Likes", p.getMovie_facebook_likes()});
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTtabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 800));
        setResizable(false);

        jTtabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Atributo", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTtabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTtabla;
    // End of variables declaration//GEN-END:variables
}
